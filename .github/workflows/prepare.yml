name: Build & Publish Layers

on:
  release:
    types: [published]

concurrency:
  group: merge-${{ github.ref }}

jobs:
  pre:
    name: Check for Changes
    runs-on: ubuntu-latest
    permissions:
      pull-requests: read
      contents: read
    outputs:
      libsql: ${{ steps.changes.outputs.libsql }}
      imgly: ${{ steps.changes.outputs.imgly }}
      onnxruntime: ${{ steps.changes.outputs.onnxruntime }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Getting sha for last release
        id: last-release
        run: |
          tag=`gh release list | sed -n '2 p' | awk '{print $(NF -1);}'`
          echo "tag=$tag" >> $GITHUB_OUTPUT
        env:
          GITHUB_TOKEN: ${{ github.TOKEN }}

      - uses: dorny/paths-filter@v2
        id: changes
        with:
          base: '${{ steps.last-release.outputs.tag }}'
          filters: |
            libsql:
            - 'libsql/package.json'
            imgly:
              - 'imgly/package.json'
              onnxruntime:
              - 'onnxruntime/package.json'

  libsql:
    name: libsql
    needs:
      - pre
    if: ${{ needs.pre.outputs.libsql == 'true' }}
    uses: ./.github/workflows/build-assets.yml
    with:
      archiveName: libsql

  imgly:
    name: imgly
    needs:
      - pre
    if: ${{ needs.pre.outputs.imgly == 'true' }}
    uses: ./.github/workflows/build-assets.yml
    with:
      archiveName: imgly
      dependencies: onnxruntime-node,onnxruntime-common

  onnxruntime:
    name: onnxruntime
    needs:
      - pre
    if: ${{ needs.pre.outputs.onnxruntime == 'true' }}
    uses: ./.github/workflows/build-assets.yml
    with:
      archiveName: onnxruntime
      removePaths: onnxruntime-node/bin/napi-v3/darwin,onnxruntime-node/bin/napi-v3/win32,onnxruntime-node/bin/napi-v3/linux/arm64,onnxruntime-node/bin/napi-v3/linux/x64/libonnxruntime_providers_cuda.so,onnxruntime-node/bin/napi-v3/linux/x64/libonnxruntime_providers_shared.so,onnxruntime-node/bin/napi-v3/linux/x64/libonnxruntime_providers_tensorrt.so
