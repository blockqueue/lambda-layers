on:
  workflow_call:
    inputs:
      archiveName:
        description: The name of the final archive
        type: string
        required: true
      dependencies:
        description: The name of the final archive
        type: string # a,b,c

jobs:
  BuildAndPublishAssets:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Parse ${{ inputs.archiveName }}'s package.json
        id: package_json
        run: |
          version=`cd ${{ inputs.archiveName }} && cat package.json | jq -r '.version'`
          libName=`cd ${{ inputs.archiveName }} && cat package.json | jq -r '.name'`
          echo "libName=$libName" >> $GITHUB_OUTPUT
          echo "version=$version" >> $GITHUB_OUTPUT

      - name: Install Dependency
        run: |
          echo ${{ steps.package_json.outputs.libName }}
          echo ${{ steps.package_json.outputs.version }}
          npm install "${{ steps.package_json.outputs.libName }}@${{ steps.package_json.outputs.version }}"

      - name: Zip Asset
        run: |
          mkdir -p nodejs/node_modules
          str_array=($(echo ${{ steps.package_json.outputs.libName }} | tr "/" "\n"))
          initial=${str_array[0]}
          cp -r "node_modules/${initial}" nodejs/node_modules/${initial}

          if [ -n "${{ inputs.dependencies }}" ]; then
            for dependency in $(echo ${{ inputs.dependencies }} | tr "," "\n"); do
              cp -r "node_modules/${dependency}" nodejs/node_modules/${dependency}
            done
          fi

          zip -r "${{ inputs.archiveName }}.zip" nodejs

      - name: Publish Assest to ${{ github.ref_name }}
        env:
          GITHUB_TOKEN: ${{ github.TOKEN }}
        run: |
          gh release upload ${{ github.ref_name }} "${{ inputs.archiveName }}.zip"
